function renderPageContent(e){document.querySelectorAll(".content").forEach(e=>{e.style.display="none"}),e.style.display="block";const t=document.querySelector(".default");t&&(t.style.display="none",t.classList.remove("default"))}function fetchItem(){return fetch("../data/main.json").then(e=>e.json()).catch(e=>{throw console.log("Error fetching data:",e),e})}function initialize(){const e=document.getElementById("dataContainer");fetchItem().then(t=>{const n=generateHTML(t);e.innerHTML=n}).catch(e=>{console.error("Error initializing:",e)})}function generateHTML(e){let t="";const n=[];for(let t=0;t<e.length;t++)n.push(e[t]);return n[0].project.map(e=>{t+=`<li>${e.title}</li>`}),t}!function(){function e(e){e.preventDefault(),renderPageContent(document.querySelector(this.getAttribute("href")))}document.querySelectorAll("#nav li a").forEach(t=>{t.addEventListener("click",e)})}(),document.addEventListener("DOMContentLoaded",function(){initialize(),fetchItem()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb250ZW50LmpzIiwiX3NpZGViYXIuanMiLCJtYWluLmpzIiwiYXBpL2RhdGFTZXJ2aWNlLmpzIiwiYXBpL2ZldGNoU2VydmljZS5qcyJdLCJuYW1lcyI6WyJyZW5kZXJQYWdlQ29udGVudCIsInRhcmdldFNlY3Rpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZGl2Iiwic3R5bGUiLCJkaXNwbGF5IiwiZGVmYXVsdFNlY3Rpb24iLCJxdWVyeVNlbGVjdG9yIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiZmV0Y2hJdGVtIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImluaXRpYWxpemUiLCJkYXRhQ29udGFpbmVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJkYXRhIiwiaHRtbCIsImdlbmVyYXRlSFRNTCIsImlubmVySFRNTCIsImVycm9yIiwiZGF0YUFycmF5IiwiaSIsImxlbmd0aCIsInB1c2giLCJwcm9qZWN0IiwibWFwIiwiaXRlbSIsInRpdGxlIiwiaGFuZGxlTGlua0NsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInRoaXMiLCJnZXRBdHRyaWJ1dGUiLCJsaW5rIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0Esa0JBQWtCQyxHQUNIQyxTQUFTQyxpQkFBaUIsWUFHbENDLFFBQVFDLElBQ2hCQSxFQUFJQyxNQUFNQyxRQUFVLFNBU3hCTixFQUFjSyxNQUFNQyxRQUFVLFFBTTlCLE1BQU1DLEVBQWlCTixTQUFTTyxjQUFjLFlBQzFDRCxJQUNBQSxFQUFlRixNQUFNQyxRQUFVLE9BQy9CQyxFQUFlRSxVQUFVQyxPQUFPLFlBOEJ4QyxTQUFTQyxZQUNMLE9BQU9DLE1BQU0scUJBQ1JDLEtBQUtDLEdBQU9BLEVBQUlDLFFBQ2hCQyxNQUFNQyxJQUVILE1BREFDLFFBQVFDLElBQUksdUJBQXdCRixHQUM5QkEsSUFNbEIsU0FBU0csYUFDTCxNQUFNQyxFQUFnQnBCLFNBQVNxQixlQUFlLGlCQUU5Q1gsWUFDS0UsS0FBS1UsSUFFRixNQUFNQyxFQUFPQyxhQUFhRixHQUUxQkYsRUFBY0ssVUFBWUYsSUFFN0JSLE1BQU1DLElBRUhDLFFBQVFTLE1BQU0sc0JBQXVCVixLQUtqRCxTQUFTUSxhQUFhRixHQUNsQixJQUFJQyxFQUFPLEdBRVgsTUFBTUksRUFBWSxHQUNsQixJQUFJLElBQUlDLEVBQUUsRUFBR0EsRUFBRU4sRUFBS08sT0FBUUQsSUFFeEJELEVBQVVHLEtBQUtSLEVBQUtNLElBV3hCLE9BUkFELEVBQVUsR0FBR0ksUUFBUUMsSUFBS0MsSUFDdEJWLFVBQWVVLEVBQUtDLGVBT2pCWCxHQXhFWCxXQWFJLFNBQVNZLEVBQWdCQyxHQUNyQkEsRUFBTUMsaUJBSU52QyxrQkFGc0JFLFNBQVNPLGNBQWMrQixLQUFLQyxhQUFhLFVBZDlDdkMsU0FBU0MsaUJBQWlCLGFBT2xDQyxRQUFRc0MsSUFDakJBLEVBQUtDLGlCQUFpQixRQUFTTixLQVZ2QyxHQXFCQW5DLFNBQVN5QyxpQkFBaUIsbUJBQW9CLFdBQzFDdEIsYUFDQVQiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcmVuZGVyUGFnZUNvbnRlbnQodGFyZ2V0U2VjdGlvbikge1xuICAgIGNvbnN0IGNvbnRlbnREaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNvbnRlbnQnKTtcbiAgICBcbiAgICAvLyBjb25zb2xlLmxvZyhjb250ZW50RGl2cy5nZXRBdHRpYnV0ZSgnaWQnKSk7XG4gICAgY29udGVudERpdnMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgICBkaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGl2LmdldEF0dHJpYnV0ZSgnaWQnKSA9PT0gJ3Byb2plY3QnKTtcbiAgICAgICAgLy8gaWYoZGl2LmdldEF0dHJpYnV0ZSgnaWQnKSA9PT0gJ3Byb2plY3QnKSB7XG4gICAgICAgIC8vICAgICByZXR1cm4gZGl2LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICAvLyB9IGVsc2Uge1xuICAgICAgICAvLyAgICAgcmV0dXJuIGRpdi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAvLyB9XG4gICAgfSk7XG5cbiAgICB0YXJnZXRTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIFxuICAgIC8vIFNldCBpbml0aWFsIGRpc3BsYXlcbiAgICAvLyBjb25zdCBkZWZhdWx0U2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kZWZhdWx0Jyk7XG4gICAgLy8gZGVmYXVsdFNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgLy8gSGlkZSB0aGUgZGVmYXVsdCBzZWN0aW9uIGlmIGl0IGhhcyB0aGUgJ2RlZmF1bHQnIGNsYXNzXG4gICAgY29uc3QgZGVmYXVsdFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVmYXVsdCcpO1xuICAgIGlmIChkZWZhdWx0U2VjdGlvbikge1xuICAgICAgICBkZWZhdWx0U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICBkZWZhdWx0U2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKCdkZWZhdWx0Jyk7XG4gICAgfVxufSIsImltcG9ydCB7IHJlbmRlclBhZ2VDb250ZW50IH0gZnJvbSAnLi9fY29udGVudC5qcyc7XG5cbihmdW5jdGlvbigpIHtcbiAgICAvLyBjb25zdCBzaWRlYmFyTGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjc2lkZWJhciBhJyk7XG4gICAgY29uc3Qgc2lkZWJhckxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI25hdiBsaSBhJyk7XG4gICAgLy8gY29uc3QgZGVmYXVsdExpbmsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnI2RlZmF1bHQnKTtcblxuICAgIC8vIGRlZmF1bHRMaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIC8vICAgICBkZWZhdWx0U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAvLyB9KTtcblxuICAgIHNpZGViYXJMaW5rcy5mb3JFYWNoKGxpbmsgPT4ge1xuICAgICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTGlua0NsaWNrKTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIGhhbmRsZUxpbmtDbGljayhldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGNvbnN0IHRhcmdldFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJykpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0YXJnZXRTZWN0aW9uKTtcbiAgICAgICAgcmVuZGVyUGFnZUNvbnRlbnQodGFyZ2V0U2VjdGlvbik7XG4gICAgfVxufSkoKTsiLCJpbXBvcnQgeyBpbml0aWFsaXplIH0gZnJvbSAnLi9hcGkvZmV0Y2hTZXJ2aWNlJztcbmltcG9ydCB7IGZldGNoSXRlbSB9IGZyb20gJy4vYXBpL2RhdGFTZXJ2aWNlJztcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCl7XG4gICAgaW5pdGlhbGl6ZSgpO1xuICAgIGZldGNoSXRlbSgpO1xuICAgIC8vIGNvbnNvbGUubG9nKGZldGNoU2VydmljZSk7XG59KTsgIiwiXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hJdGVtKCkge1xuICAgIHJldHVybiBmZXRjaCgnLi4vZGF0YS9tYWluLmpzb24nKVxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgZmV0Y2hpbmcgZGF0YTonLCBlcnIpO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9KTtcbn1cblxuIiwiXG5pbXBvcnQgeyBmZXRjaEl0ZW0gfSBmcm9tIFwiLi9kYXRhU2VydmljZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBjb25zdCBkYXRhQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGFDb250YWluZXInKTtcblxuICAgIGZldGNoSXRlbSgpXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgLy8gUHJvY2VzcyB0aGUgSlNPTiBkYXRhXG4gICAgICAgICAgICBjb25zdCBodG1sID0gZ2VuZXJhdGVIVE1MKGRhdGEpO1xuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBIVE1MIGNvbnRhaW5lclxuICAgICAgICAgICAgZGF0YUNvbnRhaW5lci5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIC8vIEhhbmRsZSBhbnkgZXJyb3JzXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbml0aWFsaXppbmc6JywgZXJyKTtcbiAgICAgICAgfSk7XG59XG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVIVE1MKGRhdGEpIHtcbiAgICBsZXQgaHRtbCA9ICcnO1xuXG4gICAgY29uc3QgZGF0YUFycmF5ID0gW107XG4gICAgZm9yKGxldCBpPTA7IGk8ZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBjb25zdCBkID0gZGF0YVtpXTtcbiAgICAgICAgZGF0YUFycmF5LnB1c2goZGF0YVtpXSk7XG4gICAgfVxuICAgIC8vIGNvbnNvbGUubG9nKGRhdGFBcnJheSk7XG4gICAgZGF0YUFycmF5WzBdLnByb2plY3QubWFwKChpdGVtKSA9PiB7XG4gICAgICAgIGh0bWwgKz0gYDxsaT4ke2l0ZW0udGl0bGV9PC9saT5gO1xuICAgIH0pXG5cbiAgICAvLyBmb3IobGV0IGl0ZW0gb2YgZGF0YSkge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhpdGVtLnByb2plY3QpXG4gICAgLy8gICAgIC8vIGh0bWwgKz0gYDxsaT4ke2l0ZW0udGl0bGV9PC9saT5gO1xuICAgIC8vIH1cbiAgICByZXR1cm4gaHRtbDtcbn1cbiJdLCJmaWxlIjoibWFpbi5taW4ubWluLmpzIn0=
