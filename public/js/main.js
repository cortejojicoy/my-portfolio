function renderPageContent(e){var t=document.querySelectorAll(".content");const n=document.querySelector(".default");t.forEach(e=>{n?(n.style.display="none",n.classList.remove("default")):e.style.display="none"}),e.style.display="block"}function fetchItem(){return fetch("../data/main.json").then(e=>e.json()).catch(e=>{throw console.log("Error fetching data:",e),e})}function initialize(t){const n=document.getElementById("projectContainer");document.getElementById("aboutContainer");fetchItem().then(e=>{e=generateHTML(e,t);console.log(t),n.innerHTML=e}).catch(e=>{console.error("Error initializing:",e)})}function generateHTML(t,e){var n=[];for(let e=0;e<t.length;e++)n.push(t[e]);return n.map(e=>{console.log(e.project)}),""}!function(){function t(e){e.preventDefault();e=this.getAttribute("href").replace("#","");renderPageContent(document.querySelector(this.getAttribute("href"))),initialize(e)}document.querySelectorAll("#nav li a").forEach(e=>{e.addEventListener("click",t)})}(),document.addEventListener("DOMContentLoaded",function(){initialize(),fetchItem()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb250ZW50LmpzIiwiYXBpL2RhdGFTZXJ2aWNlLmpzIiwiYXBpL2ZldGNoU2VydmljZS5qcyIsIl9zaWRlYmFyLmpzIl0sIm5hbWVzIjpbInJlbmRlclBhZ2VDb250ZW50IiwidGFyZ2V0U2VjdGlvbiIsImNvbnRlbnREaXZzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVmYXVsdFNlY3Rpb24iLCJxdWVyeVNlbGVjdG9yIiwiZm9yRWFjaCIsImRpdiIsInN0eWxlIiwiZGlzcGxheSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImZldGNoSXRlbSIsImZldGNoIiwidGhlbiIsInJlcyIsImpzb24iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJpbml0aWFsaXplIiwibGluayIsInByb2plY3RDb250YWluZXIiLCJnZXRFbGVtZW50QnlJZCIsImRhdGEiLCJodG1sIiwiZ2VuZXJhdGVIVE1MIiwiaW5uZXJIVE1MIiwiZXJyb3IiLCJsZXQiLCJkYXRhQXJyYXkiLCJpIiwibGVuZ3RoIiwicHVzaCIsIm1hcCIsIml0ZW0iLCJwcm9qZWN0IiwiaGFuZGxlTGlua0NsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlbW92ZUhhc2giLCJ0aGlzIiwiZ2V0QXR0cmlidXRlIiwicmVwbGFjZSIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQUFBLFNBQUFBLGtCQUFBQyxHQUNBLElBQUFDLEVBQUFDLFNBQUFDLGlCQUFBLFVBQUEsRUFDQSxNQUFBQyxFQUFBRixTQUFBRyxjQUFBLFVBQUEsRUFFQUosRUFBQUssUUFBQUMsSUFFQUgsR0FDQUEsRUFBQUksTUFBQUMsUUFBQSxPQUNBTCxFQUFBTSxVQUFBQyxPQUFBLFNBQUEsR0FHQUosRUFBQUMsTUFBQUMsUUFBQSxNQVNBLENBQUEsRUFFQVQsRUFBQVEsTUFBQUMsUUFBQSxPQVdBLENDaENBLFNBQUFHLFlBQ0EsT0FBQUMsTUFBQSxtQkFBQSxFQUNBQyxLQUFBQyxHQUFBQSxFQUFBQyxLQUFBLENBQUEsRUFDQUMsTUFBQUMsSUFFQSxNQURBQyxRQUFBQyxJQUFBLHVCQUFBRixDQUFBLEVBQ0FBLENBQ0EsQ0FBQSxDQUNBLENDTEEsU0FBQUcsV0FBQUMsR0FDQSxNQUFBQyxFQUFBckIsU0FBQXNCLGVBQUEsa0JBQUEsRUFDQXRCLFNBQUFzQixlQUFBLGdCQUFBLEVBR0FaLFVBQUEsRUFDQUUsS0FBQVcsSUFFQUMsRUFBQUMsYUFBQUYsRUFBQUgsQ0FBQSxFQUVBSCxRQUFBQyxJQUFBRSxDQUFBLEVBQ0FDLEVBQUFLLFVBQUFGLENBQ0EsQ0FBQSxFQUNBVCxNQUFBQyxJQUVBQyxRQUFBVSxNQUFBLHNCQUFBWCxDQUFBLENBQ0EsQ0FBQSxDQUNBLENBR0EsU0FBQVMsYUFBQUYsRUFBQUgsR0FDQVEsSUFFQUMsRUFBQSxHQUNBLElBQUFELElBQUFFLEVBQUEsRUFBQUEsRUFBQVAsRUFBQVEsT0FBQUQsQ0FBQSxHQUVBRCxFQUFBRyxLQUFBVCxFQUFBTyxFQUFBLEVBZ0NBLE9BekJBRCxFQUFBSSxJQUFBLElBQ0FoQixRQUFBQyxJQUFBZ0IsRUFBQUMsT0FBQSxDQUNBLENBQUEsRUFkQSxFQXNDQSxDQzNEQSxDQUFBLFdBYUEsU0FBQUMsRUFBQUMsR0FDQUEsRUFBQUMsZUFBQSxFQUdBQyxFQURBQyxLQUFBQyxhQUFBLE1BQUEsRUFDQUMsUUFBQSxJQUFBLEVBQUEsRUFHQTdDLGtCQURBRyxTQUFBRyxjQUFBcUMsS0FBQUMsYUFBQSxNQUFBLENBQUEsQ0FDQSxFQUNBdEIsV0FBQW9CLENBQUEsQ0FDQSxDQXBCQXZDLFNBQUFDLGlCQUFBLFdBQUEsRUFPQUcsUUFBQWdCLElBQ0FBLEVBQUF1QixpQkFBQSxRQUFBUCxDQUFBLENBQ0EsQ0FBQSxDQVlBLEVBQUEsRUh2QkFwQyxTQUFBMkMsaUJBQUEsbUJBQUEsV0FDQXhCLFdBQUEsRUFDQVQsVUFBQSxDQUVBLENBQUEiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiByZW5kZXJQYWdlQ29udGVudCh0YXJnZXRTZWN0aW9uKSB7XG4gICAgY29uc3QgY29udGVudERpdnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29udGVudCcpO1xuICAgIGNvbnN0IGRlZmF1bHRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRlZmF1bHQnKTtcbiAgICBcbiAgICBjb250ZW50RGl2cy5mb3JFYWNoKGRpdiA9PiB7XG5cbiAgICAgICAgaWYgKGRlZmF1bHRTZWN0aW9uKSB7XG4gICAgICAgICAgICBkZWZhdWx0U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgZGVmYXVsdFNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZSgnZGVmYXVsdCcpO1xuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICBkaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGRpdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT09ICdwcm9qZWN0Jyk7XG4gICAgICAgIC8vIGlmKGRpdi5nZXRBdHRyaWJ1dGUoJ2lkJykgPT09ICdwcm9qZWN0Jykge1xuICAgICAgICAvLyAgICAgcmV0dXJuIGRpdi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgLy8gICAgIHJldHVybiBkaXYuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgLy8gfVxuICAgIH0pO1xuXG4gICAgdGFyZ2V0U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBcbiAgICAvLyBTZXQgaW5pdGlhbCBkaXNwbGF5XG4gICAgLy8gY29uc3QgZGVmYXVsdFNlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVmYXVsdCcpO1xuICAgIC8vIGRlZmF1bHRTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIC8vIEhpZGUgdGhlIGRlZmF1bHQgc2VjdGlvbiBpZiBpdCBoYXMgdGhlICdkZWZhdWx0JyBjbGFzc1xuICAgIC8vIGNvbnN0IGRlZmF1bHRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRlZmF1bHQnKTtcbiAgICAvLyBpZiAoZGVmYXVsdFNlY3Rpb24pIHtcbiAgICAvLyAgICAgZGVmYXVsdFNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAvLyAgICAgZGVmYXVsdFNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZSgnZGVmYXVsdCcpO1xuICAgIC8vIH1cbn0iLCJcbmV4cG9ydCBmdW5jdGlvbiBmZXRjaEl0ZW0oKSB7XG4gICAgcmV0dXJuIGZldGNoKCcuLi9kYXRhL21haW4uanNvbicpXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdFcnJvciBmZXRjaGluZyBkYXRhOicsIGVycik7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xufVxuXG4iLCJcbmltcG9ydCB7IGZldGNoSXRlbSB9IGZyb20gXCIuL2RhdGFTZXJ2aWNlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplKGxpbmspIHtcbiAgICBjb25zdCBwcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Byb2plY3RDb250YWluZXInKTtcbiAgICBjb25zdCBhYm91dENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhYm91dENvbnRhaW5lcicpO1xuXG4gICAgLy8gY29uc29sZS5sb2cobGluaylcbiAgICBmZXRjaEl0ZW0oKVxuICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIC8vIFByb2Nlc3MgdGhlIEpTT04gZGF0YVxuICAgICAgICAgICAgY29uc3QgaHRtbCA9IGdlbmVyYXRlSFRNTChkYXRhLCBsaW5rKTtcbiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgSFRNTCBjb250YWluZXJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGxpbmspXG4gICAgICAgICAgICBwcm9qZWN0Q29udGFpbmVyLmlubmVySFRNTCA9IGh0bWw7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgLy8gSGFuZGxlIGFueSBlcnJvcnNcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZzonLCBlcnIpO1xuICAgICAgICB9KTtcbn1cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZUhUTUwoZGF0YSwgbGluaykge1xuICAgIGxldCBodG1sID0gJyc7XG5cbiAgICBjb25zdCBkYXRhQXJyYXkgPSBbXTtcbiAgICBmb3IobGV0IGk9MDsgaTxkYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGNvbnN0IGQgPSBkYXRhW2ldO1xuICAgICAgICBkYXRhQXJyYXkucHVzaChkYXRhW2ldKTtcbiAgICB9XG4gICAgLy8gY29uc29sZS5sb2coZGF0YUFycmF5KTtcbiAgICAvLyBkYXRhQXJyYXlbMF0ucHJvamVjdC5tYXAoKGl0ZW0pID0+IHtcbiAgICAvLyAgICAgaHRtbCArPSBgPGxpPiR7aXRlbS50aXRsZX08L2xpPmA7XG4gICAgLy8gfSlcblxuICAgIGRhdGFBcnJheS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coaXRlbS5wcm9qZWN0KVxuICAgIH0pXG5cblxuICAgIC8vIGlmKGxpbmsgPT0gJyNwcm9qZWN0Jykge1xuICAgIC8vICAgICAvLyBjb25zb2xlLmxvZyhkYXRhQXJyYXkpXG4gICAgLy8gICAgIGRhdGFBcnJheVswXS5wcm9qZWN0Lm1hcCgoaXRlbSkgPT4ge1xuICAgIC8vICAgICAgICAgaHRtbCArPSBgPGxpPiR7aXRlbS50aXRsZX08L2xpPmA7XG4gICAgLy8gICAgIH0pXG4gICAgICAgIFxuICAgIC8vIH1cbiAgICBcbiAgICAvLyBpZihsaW5rID09ICcjYWJvdXQnKSB7XG4gICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKGRhdGFBcnJheVsxXS5hYm91dC50ZXh0KVxuICAgIC8vICAgICBodG1sICs9IGA8bGk+JHtkYXRhQXJyYXlbMV0uYWJvdXQudGV4dH08L2xpPmA7XG4gICAgLy8gfVxuICAgIFxuICAgIC8vIGVsc2Uge1xuICAgIC8vICAgICBodG1sICs9ICcnXG4gICAgLy8gfVxuICAgIC8vIGZvcihsZXQgaXRlbSBvZiBkYXRhKSB7XG4gICAgLy8gICAgIGNvbnNvbGUubG9nKGl0ZW0ucHJvamVjdClcbiAgICAvLyAgICAgLy8gaHRtbCArPSBgPGxpPiR7aXRlbS50aXRsZX08L2xpPmA7XG4gICAgLy8gfVxuICAgIHJldHVybiBodG1sO1xufVxuIiwiaW1wb3J0IHsgcmVuZGVyUGFnZUNvbnRlbnQgfSBmcm9tICcuL19jb250ZW50LmpzJztcbmltcG9ydCB7IGluaXRpYWxpemUgfSBmcm9tICcuL2FwaS9mZXRjaFNlcnZpY2UuanMnO1xuXG4oZnVuY3Rpb24oKSB7XG4gICAgLy8gY29uc3Qgc2lkZWJhckxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3NpZGViYXIgYScpO1xuICAgIGNvbnN0IHNpZGViYXJMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNuYXYgbGkgYScpO1xuICAgIC8vIGNvbnN0IGRlZmF1bHRMaW5rID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJyNkZWZhdWx0Jyk7XG5cbiAgICAvLyBkZWZhdWx0TGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAvLyAgICAgZGVmYXVsdFNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgLy8gfSk7XG5cbiAgICBzaWRlYmFyTGlua3MuZm9yRWFjaChsaW5rID0+IHtcbiAgICAgICAgbGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUxpbmtDbGljayk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVMaW5rQ2xpY2soZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGhyZWZWYWx1ZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG4gICAgICAgIGNvbnN0IHJlbW92ZUhhc2ggPSBocmVmVmFsdWUucmVwbGFjZSgnIycsICcnKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coaHJlZlZhbHVlKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0U2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSk7XG4gICAgICAgIHJlbmRlclBhZ2VDb250ZW50KHRhcmdldFNlY3Rpb24pO1xuICAgICAgICBpbml0aWFsaXplKHJlbW92ZUhhc2gpO1xuICAgIH1cbn0pKCk7Il19
